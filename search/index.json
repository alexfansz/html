[{"content":"两个协议标准定义了RTP H264的传输规范\nRFC3550 RFC6184 c++实例RFC3550我自己常用JRTPLIB 使用ffmpeg测试验证 用ffmpeg 向本机发送rtp流 Output #0, rtp, to 'rtp://127.0.0.1:30016': Metadata: encoder : Lavf58.45.100 Stream #0:0: Video: h264 (libx264), nv12, 1920x1080, q=-1--1, 30 fps, 90k tbn, 30 tbc Metadata: encoder : Lavc58.91.100 libx264 Side data: cpb: bitrate max/min/avg: 20000000/0/0 buffer size: 1000000 vbv_delay: N/A SDP: v=0 o=- 0 0 IN IP4 127.0.0.1 s=No Name c=IN IP4 127.0.0.1 t=0 0 a=tool:libavformat 58.45.100 m=video 30016 RTP/AVP 96 a=rtpmap:96 H264/90000 a=fmtp:96 packetization-mode=1 frame= 39 fps= 30 q=18.0 Lsize= 578kB time=00:00:01.26 bitrate=3737.0kbits/s dup=12 drop=0 speed=0.982x video:572kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 1.025276% 使用JRTPLIB自带的tests 测试用例rtcpdump验证 #include \u0026#34;rtpsession.h\u0026#34;#include \u0026#34;rtpipv4address.h\u0026#34;#include \u0026#34;rtpsessionparams.h\u0026#34;#include \u0026#34;rtpudpv4transmitter.h\u0026#34;#include \u0026#34;rtperrors.h\u0026#34;#include \u0026#34;rtcpcompoundpacket.h\u0026#34;#include \u0026#34;rtcpsrpacket.h\u0026#34;#include \u0026#34;rtcprrpacket.h\u0026#34;#include \u0026#34;rtcpbyepacket.h\u0026#34;#include \u0026#34;rtprawpacket.h\u0026#34;#include \u0026lt;stdio.h\u0026gt;#include \u0026lt;iostream\u0026gt; using namespace jrtplib; void checkError(int status) { if (status \u0026gt;= 0) return; std::cerr \u0026lt;\u0026lt; \u0026#34;An error occured in the RTP component: \u0026#34; \u0026lt;\u0026lt; std::endl; std::cerr \u0026lt;\u0026lt; \u0026#34;Error description: \u0026#34; \u0026lt;\u0026lt; RTPGetErrorString(status) \u0026lt;\u0026lt; std::endl; exit(-1); } class MyRTPSession : public RTPSession { private: FILE *pLogFile; public: MyRTPSession() { SetChangeIncomingData(true); pLogFile = fopen(\u0026#34;logfile.dat\u0026#34;, \u0026#34;wb\u0026#34;); } ~MyRTPSession() { if (pLogFile) fclose(pLogFile); } protected: void OnValidatedRTPPacket(RTPSourceData *srcdat, RTPPacket *rtppack, bool isonprobation, bool *ispackethandled) { // Make sure no RTP packets are stored internally, we\u0026#39;d just be wasting memory \tDeletePacket(rtppack); *ispackethandled = true; } bool OnChangeIncomingData(RTPRawPacket *pPack) { if (pLogFile) { double t = pPack-\u0026gt;GetReceiveTime().GetDouble(); bool isRTP = pPack-\u0026gt;IsRTP(); uint32_t dataLength = (uint32_t)pPack-\u0026gt;GetDataLength(); if (isRTP) fwrite(\u0026#34;RTP \u0026#34;, 1, 4, pLogFile); else fwrite(\u0026#34;RTCP\u0026#34;, 1, 4, pLogFile); fwrite(\u0026amp;t, 1, sizeof(double), pLogFile); fwrite(\u0026amp;dataLength, 1, sizeof(uint32_t),pLogFile); fwrite(pPack-\u0026gt;GetData(), 1, dataLength, pLogFile); } return true; } void OnRTCPCompoundPacket(RTCPCompoundPacket *p, const RTPTime \u0026amp;receivetime, const RTPAddress *senderaddress) {\tprintf(\u0026#34;%u.%06u RECEIVED\\n\u0026#34;,receivetime.GetSeconds(),receivetime.GetMicroSeconds()); DumpCompoundPacket(stdout,p); } void OnSendRTCPCompoundPacket(RTCPCompoundPacket *p) {\tRTPTime t = RTPTime::CurrentTime(); printf(\u0026#34;%u.%06u SENDING\\n\u0026#34;,t.GetSeconds(),t.GetMicroSeconds()); DumpCompoundPacket(stdout,p); } void DumpCompoundPacket(FILE *f, RTCPCompoundPacket *p) { RTCPPacket *pack; p-\u0026gt;GotoFirstPacket(); while ((pack = p-\u0026gt;GetNextPacket()) != 0) { if (pack-\u0026gt;GetPacketType() == RTCPPacket::SR) { RTCPSRPacket *p = (RTCPSRPacket *)pack; RTPTime t(p-\u0026gt;GetNTPTimestamp()); fprintf(f,\u0026#34; SR packet\\nSSRC %27u\\n\u0026#34;,p-\u0026gt;GetSenderSSRC()); fprintf(f,\u0026#34; NTP timestamp: %10u.%06u\\nRTP timestamp: %17u\\nPackets sent: %18u\\nOctets sent: %19u\\n\u0026#34;,t.GetSeconds(),t.GetMicroSeconds(),p-\u0026gt;GetRTPTimestamp(),p-\u0026gt;GetSenderPacketCount(),p-\u0026gt;GetSenderOctetCount()); for (int i = 0 ; i \u0026lt; p-\u0026gt;GetReceptionReportCount() ; i++) fprintf(f,\u0026#34; RR block %d\\nSSRC %25u\\nFraction lost: %15d\\nPackets lost: %16d\\nExt. high. seq. nr: %10u\\nJitter: %22u\\nLSR: %25u\\nDLSR: %24u\\n\u0026#34;,(i+1), p-\u0026gt;GetSSRC(i),(int)p-\u0026gt;GetFractionLost(i),p-\u0026gt;GetLostPacketCount(i),p-\u0026gt;GetExtendedHighestSequenceNumber(i),p-\u0026gt;GetJitter(i),p-\u0026gt;GetLSR(i), p-\u0026gt;GetDLSR(i)); } else if (pack-\u0026gt;GetPacketType() == RTCPPacket::RR) { RTCPRRPacket *p = (RTCPRRPacket *)pack; fprintf(f,\u0026#34; RR packet\\nSSRC %27u\\n\u0026#34;,p-\u0026gt;GetSenderSSRC()); for (int i = 0 ; i \u0026lt; p-\u0026gt;GetReceptionReportCount() ; i++) fprintf(f,\u0026#34; RR block %d\\nSSRC %25u\\nFraction lost: %15d\\nPackets lost: %16d\\nExt. high. seq. nr: %10u\\nJitter: %22u\\nLSR: %25u\\nDLSR: %24u\\n\u0026#34;,(i+1), p-\u0026gt;GetSSRC(i),(int)p-\u0026gt;GetFractionLost(i),p-\u0026gt;GetLostPacketCount(i),p-\u0026gt;GetExtendedHighestSequenceNumber(i),p-\u0026gt;GetJitter(i),p-\u0026gt;GetLSR(i), p-\u0026gt;GetDLSR(i)); } else if (pack-\u0026gt;GetPacketType() == RTCPPacket::SDES) { RTCPSDESPacket *p = (RTCPSDESPacket *)pack; char str[1024]; if (!p-\u0026gt;GotoFirstChunk()) return; do { fprintf(f,\u0026#34; SDES Chunk:\\n\u0026#34;); fprintf(f,\u0026#34; SSRC: %26u\\n\u0026#34;,p-\u0026gt;GetChunkSSRC()); if (p-\u0026gt;GotoFirstItem()) { do { switch (p-\u0026gt;GetItemType()) { case RTCPSDESPacket::None: strcpy(str,\u0026#34;None \u0026#34;); break; case RTCPSDESPacket::CNAME: strcpy(str,\u0026#34;CNAME: \u0026#34;); break; case RTCPSDESPacket::NAME: strcpy(str,\u0026#34;NAME: \u0026#34;); break; case RTCPSDESPacket::EMAIL: strcpy(str,\u0026#34;EMAIL: \u0026#34;); break; case RTCPSDESPacket::PHONE: strcpy(str,\u0026#34;PHONE: \u0026#34;); break; case RTCPSDESPacket::LOC: strcpy(str,\u0026#34;LOC: \u0026#34;); break; case RTCPSDESPacket::TOOL: strcpy(str,\u0026#34;TOOL: \u0026#34;); break; case RTCPSDESPacket::NOTE: strcpy(str,\u0026#34;NOTE: \u0026#34;); break; case RTCPSDESPacket::PRIV: strcpy(str,\u0026#34;PRIV: \u0026#34;); break; case RTCPSDESPacket::Unknown: default: strcpy(str,\u0026#34;Unknown \u0026#34;); } fprintf(f,\u0026#34; %s\u0026#34;,str); if (p-\u0026gt;GetItemType() != RTCPSDESPacket::PRIV) { char str[1024]; memcpy(str,p-\u0026gt;GetItemData(),p-\u0026gt;GetItemLength()); str[p-\u0026gt;GetItemLength()] = 0; fprintf(f,\u0026#34;%24s\\n\u0026#34;,str); } } while (p-\u0026gt;GotoNextItem()); } } while (p-\u0026gt;GotoNextChunk()); } else if (pack-\u0026gt;GetPacketType() == RTCPPacket::BYE) { fprintf(f,\u0026#34; BYE packet:\\n\u0026#34;); RTCPBYEPacket *p = (RTCPBYEPacket *)pack; int num = p-\u0026gt;GetSSRCCount(); int i; for (i = 0 ; i \u0026lt; num ; i++) fprintf(f,\u0026#34; SSRC: %26u\\n\u0026#34;,p-\u0026gt;GetSSRC(i)); if (p-\u0026gt;HasReasonForLeaving()) { char str[1024]; memcpy(str,p-\u0026gt;GetReasonData(),p-\u0026gt;GetReasonLength()); str[p-\u0026gt;GetReasonLength()] = 0; fprintf(f,\u0026#34; Reason: %24s\\n\u0026#34;,str); } } } fprintf(f,\u0026#34;\\n\u0026#34;); } }; int main(int argc, char *argv[]) { if (argc != 4) { fprintf(stderr, \u0026#34;Usage: rtcpdump portbase destIP destport\\n\u0026#34;); return -1; } int portBase = atoi(argv[1]); int destPort = atoi(argv[3]); std::string destIP(argv[2]); RTPIPv4Address dest; RTPUDPv4TransmissionParams transParams; RTPSessionParams sessParams; MyRTPSession session; dest.SetIP(ntohl(inet_addr(destIP.c_str()))); dest.SetPort((uint16_t)destPort); transParams.SetPortbase((uint16_t)portBase); transParams.SetRTPReceiveBuffer(1024*1024); transParams.SetRTCPReceiveBuffer(1024*1024); sessParams.SetOwnTimestampUnit(1.0/9000.0); sessParams.SetProbationType(RTPSources::NoProbation); int status; status = session.Create(sessParams, \u0026amp;transParams); checkError(status); status = session.AddDestination(dest); checkError(status); int i = 0; getchar(); return 0; } ","date":"2022-05-02T00:00:00Z","permalink":"http://www.basicgo.net/p/u2-x10_3/","title":"会议投屏(4)"},{"content":"Desktop Duplication API Windows 8 disables standard Windows 2000 Display Driver Model (XDDM) mirror drivers and offers the desktop duplication API instead. The desktop duplication API provides remote access to a desktop image for collaboration scenarios. Apps can use the desktop duplication API to access frame-by-frame updates to the desktop. Because apps receive updates to the desktop image in a DXGI surface, the apps can use the full power of the GPU to process the image updates.\n Updating the desktop image data Rotating the desktop image Updating the desktop pointer  实例化DirectX 11 device HRESULT CreateDirect3DDevice(IDXGIAdapter1* g) { HRESULT hr = S_OK; // Driver types supported  D3D_DRIVER_TYPE DriverTypes[] = { D3D_DRIVER_TYPE_HARDWARE, D3D_DRIVER_TYPE_WARP, D3D_DRIVER_TYPE_REFERENCE, }; UINT NumDriverTypes = ARRAYSIZE(DriverTypes); // Feature levels supported  D3D_FEATURE_LEVEL FeatureLevels[] = { D3D_FEATURE_LEVEL_11_0, D3D_FEATURE_LEVEL_10_1, D3D_FEATURE_LEVEL_10_0, D3D_FEATURE_LEVEL_9_3, D3D_FEATURE_LEVEL_9_2, D3D_FEATURE_LEVEL_9_1 }; UINT NumFeatureLevels = ARRAYSIZE(FeatureLevels); D3D_FEATURE_LEVEL FeatureLevel; // Create device  for (UINT DriverTypeIndex = 0; DriverTypeIndex \u0026lt; NumDriverTypes; ++DriverTypeIndex) { hr = D3D11CreateDevice(g, DriverTypes[DriverTypeIndex], nullptr, D3D11_CREATE_DEVICE_VIDEO_SUPPORT, FeatureLevels, NumFeatureLevels, D3D11_SDK_VERSION, \u0026amp;device, \u0026amp;FeatureLevel, \u0026amp;context); if (SUCCEEDED(hr)) { // Device creation success, no need to loop anymore  break; } } if (FAILED(hr)) return hr; return S_OK; } 创建Desktop Duplication bool Prepare(UINT Output = 0) { // Get DXGI device  CComPtr\u0026lt;IDXGIDevice\u0026gt; lDxgiDevice; lDxgiDevice = device; if (!lDxgiDevice) return 0; // Get DXGI adapter  CComPtr\u0026lt;IDXGIAdapter\u0026gt; lDxgiAdapter; auto hr = lDxgiDevice-\u0026gt;GetParent( __uuidof(IDXGIAdapter), reinterpret_cast\u0026lt;void**\u0026gt;(\u0026amp;lDxgiAdapter)); if (FAILED(hr)) return 0; lDxgiDevice = 0; // Get output  CComPtr\u0026lt;IDXGIOutput\u0026gt; lDxgiOutput; hr = lDxgiAdapter-\u0026gt;EnumOutputs(Output, \u0026amp;lDxgiOutput); if (FAILED(hr)) return 0; lDxgiAdapter = 0; DXGI_OUTPUT_DESC lOutputDesc; hr = lDxgiOutput-\u0026gt;GetDesc(\u0026amp;lOutputDesc); // QI for Output 1  CComPtr\u0026lt;IDXGIOutput1\u0026gt; lDxgiOutput1; lDxgiOutput1 = lDxgiOutput; if (!lDxgiOutput1) return 0; lDxgiOutput = 0; // Create desktop duplication  hr = lDxgiOutput1-\u0026gt;DuplicateOutput( device, \u0026amp;lDeskDupl); if (FAILED(hr)) return 0; lDxgiOutput1 = 0; // Create GUI drawing texture  lDeskDupl-\u0026gt;GetDesc(\u0026amp;lOutputDuplDesc); D3D11_TEXTURE2D_DESC desc = {}; desc.Width = lOutputDuplDesc.ModeDesc.Width; desc.Height = lOutputDuplDesc.ModeDesc.Height; desc.Format = lOutputDuplDesc.ModeDesc.Format; desc.ArraySize = 1; desc.BindFlags = D3D11_BIND_FLAG::D3D11_BIND_RENDER_TARGET; desc.MiscFlags = D3D11_RESOURCE_MISC_GDI_COMPATIBLE; desc.SampleDesc.Count = 1; desc.SampleDesc.Quality = 0; desc.MipLevels = 1; desc.CPUAccessFlags = 0; desc.Usage = D3D11_USAGE_DEFAULT; hr = device-\u0026gt;CreateTexture2D(\u0026amp;desc, NULL, \u0026amp;lGDIImage); if (FAILED(hr)) return 0; if (lGDIImage == nullptr) return 0; // Create CPU access texture  desc.Width = lOutputDuplDesc.ModeDesc.Width; desc.Height = lOutputDuplDesc.ModeDesc.Height; desc.Format = lOutputDuplDesc.ModeDesc.Format; desc.ArraySize = 1; desc.BindFlags = 0; desc.MiscFlags = 0; desc.SampleDesc.Count = 1; desc.SampleDesc.Quality = 0; desc.MipLevels = 1; desc.CPUAccessFlags = D3D11_CPU_ACCESS_READ | D3D11_CPU_ACCESS_WRITE; desc.Usage = D3D11_USAGE_STAGING; hr = device-\u0026gt;CreateTexture2D(\u0026amp;desc, NULL, \u0026amp;lDestImage); if (FAILED(hr)) return 0; if (lDestImage == nullptr) return 0; return 1; } 获取屏幕bmp 数据 hr = cap.lDeskDupl-\u0026gt;AcquireNextFrame( 0, \u0026amp;lFrameInfo, \u0026amp;lDesktopResource); if (hr == DXGI_ERROR_WAIT_TIMEOUT) hr = S_OK; if (FAILED(hr)) break; if (lDesktopResource \u0026amp;\u0026amp; !cap.Get(lDesktopResource, dp.Cursor, dp.rx.right \u0026amp;\u0026amp; dp.rx.bottom ? \u0026amp;dp.rx : 0)) break; bool Get(IDXGIResource* lDesktopResource,bool Curs,RECT* rcx = 0) { // QI for ID3D11Texture2D  CComPtr\u0026lt;ID3D11Texture2D\u0026gt; lAcquiredDesktopImage; if (!lDesktopResource) return 0; auto hr = lDesktopResource-\u0026gt;QueryInterface(IID_PPV_ARGS(\u0026amp;lAcquiredDesktopImage)); if (!lAcquiredDesktopImage) return 0; lDesktopResource = 0; // Copy image into GDI drawing texture  context-\u0026gt;CopyResource(lGDIImage, lAcquiredDesktopImage); // Draw cursor image into GDI drawing texture  CComPtr\u0026lt;IDXGISurface1\u0026gt; lIDXGISurface1; lIDXGISurface1 = lGDIImage; if (!lIDXGISurface1) return 0; CURSORINFO lCursorInfo = { 0 }; lCursorInfo.cbSize = sizeof(lCursorInfo); auto lBoolres = GetCursorInfo(\u0026amp;lCursorInfo); if (lBoolres == TRUE) { if (lCursorInfo.flags == CURSOR_SHOWING \u0026amp;\u0026amp; Curs) { auto lCursorPosition = lCursorInfo.ptScreenPos; // auto lCursorSize = lCursorInfo.cbSize;  HDC lHDC; lIDXGISurface1-\u0026gt;GetDC(FALSE, \u0026amp;lHDC); DrawIconEx( lHDC, lCursorPosition.x, lCursorPosition.y, lCursorInfo.hCursor, 0, 0, 0, 0, DI_NORMAL | DI_DEFAULTSIZE); lIDXGISurface1-\u0026gt;ReleaseDC(nullptr); } } // Copy image into CPU access texture  context-\u0026gt;CopyResource(lDestImage, lGDIImage); // Copy from CPU access texture to bitmap buffer  D3D11_MAPPED_SUBRESOURCE resource; UINT subresource = D3D11CalcSubresource(0, 0, 0); hr = context-\u0026gt;Map(lDestImage, subresource, D3D11_MAP_READ_WRITE, 0, \u0026amp;resource); if (FAILED(hr)) return 0; auto sz = lOutputDuplDesc.ModeDesc.Width * lOutputDuplDesc.ModeDesc.Height * 4; auto sz2 = sz; buf.resize(sz); if (rcx) { sz2 = (rcx-\u0026gt;right - rcx-\u0026gt;left) * (rcx-\u0026gt;bottom - rcx-\u0026gt;top) * 4; buf.resize(sz2); sz = sz2; } UINT lBmpRowPitch = lOutputDuplDesc.ModeDesc.Width * 4; if (rcx) lBmpRowPitch = (rcx-\u0026gt;right - rcx-\u0026gt;left) * 4; UINT lRowPitch = std::min\u0026lt;UINT\u0026gt;(lBmpRowPitch, resource.RowPitch); BYTE* sptr = reinterpret_cast\u0026lt;BYTE*\u0026gt;(resource.pData); BYTE* dptr = buf.data() + sz - lBmpRowPitch; if (rcx) sptr += rcx-\u0026gt;left * 4; for (size_t h = 0; h \u0026lt; lOutputDuplDesc.ModeDesc.Height; ++h) { if (rcx \u0026amp;\u0026amp; h \u0026lt; (size_t)rcx-\u0026gt;top) { sptr += resource.RowPitch; continue; } if (rcx \u0026amp;\u0026amp; h \u0026gt;= (size_t)rcx-\u0026gt;bottom) break; memcpy_s(dptr, lBmpRowPitch, sptr, lRowPitch); sptr += resource.RowPitch; dptr -= lBmpRowPitch; } context-\u0026gt;Unmap(lDestImage, subresource); return 1; } ","date":"2022-03-02T00:00:00Z","permalink":"http://www.basicgo.net/p/u2-x10_2/","title":"会议投屏(3)"},{"content":"如何选择电脑会议投屏发射器的接口，会影响我们整个产品解决方案的选择，需要严格评估HDMI、USB接口的方方面面\nHDMI  HDMI接口  原理:采集电脑HDMI视频数据并编码压缩(因为HDMI 视频原始数据量太大是无法直接传输的),然后传送到接收器。\n 编码器的选择，可以考虑RV11 Series 功耗是个问题，发射器需要做数据转换和压缩编码，HDMI接口本身供电无法满足发射器工作需求，最终选择可能除了HDMI线外，需要额外加一条usb或typc供电线   两尾巴的发射器   RV1108 数据采集编码器 \n 除了电脑，其他电视机顶盒的HDMI接口也应该可以投射 HDMI兼容性颜色偏差问题，这个问题是常在机顶盒和播放器上收到反馈  USB  usb  原理:直接从电脑内存获取屏幕数据并编码压缩，发射器仅做数据传输\n 编码器   英特尔Quick Sync Video(QSV)（地球上最强的转码技术）  Intel® Quick Sync Video \n  当然地球上还有不服Intel 的NVIDIA  NVENC \n   发射器仅做传输,功耗问题就解决了，不需要多一条尾巴 软件功能扩展方便,包括投电脑扩展屏等，产品后续功能扩展留下巨大的发展空间  对比HDMI \u0026amp; USB  HDMI方案编码性能和USB方案采用PC Gpu(哪怕是Intel i3核显)比存在较大的差距 HDMI方案功耗问题导致双尾巴让产品使用不方便 HDMI优点是机顶盒可以接入，不过我们产品目标定位是会议设备，电脑是我们的优先考虑，而且应该要考虑有的超薄电脑没有HDMI接口 USB方案功能丰富，比如扩展屏，接入局域网等等  综上，我们选择USB  使用手淘扫码查看商品   U2-X10 \n","date":"2022-01-20T00:00:00Z","image":"http://www.basicgo.net/p/u2-x10_1/u2_source_hu84a69d9f462d2421ab7664162495a227_93885_120x120_fill_box_smart1_3.png","permalink":"http://www.basicgo.net/p/u2-x10_1/","title":"会议投屏(2)"},{"content":"第一次运行Usb发射器\u0026mdash;\u0026gt;这个步骤仅对有搭配采购电脑Usb发射器到客户  把同屏器通电用HDMI线接入电视   Usb发射器插入电脑模拟CD驱动器，双击运行CD驱动器后等待数秒自动投屏 \n如何进入同屏器设置界面  按遥控器设置键   同屏器进入设置菜单 \n同屏器接入Wifi路由器后，Usb发射器如何接入同一个Wifi?  点击Usb发射器电脑程序–切换到局域网，找到对应路由器连接   Usb发射器和手机局域网内共享同屏器 \n如何切换到同屏器安卓Miracast投屏专有模式  按遥控器右键   同屏器进入安卓手机Miracast投屏模式 \n","date":"2022-01-18T00:00:00Z","permalink":"http://www.basicgo.net/p/u2-x20_help/","title":"U2-X20会议投屏产品使用问答"},{"content":"产品规格需求  即插即用 支持点对点投屏，支持多个发射点 支持接入局域网，兼容局域网内Windows电脑，Android手机和苹果电脑及手机   u2-x系列 \n我的淘宝  使用手淘扫码查看商品   U2-X10 \n","date":"2022-01-18T00:00:00Z","permalink":"http://www.basicgo.net/p/u2-x10/","title":"会议投屏(1)"},{"content":"第一次运行Usb发射器\u0026ndash;\u0026gt;这步仅对有搭配采购电脑Usb发射器的用户  把同屏器通电用HDMI线接入电视   Usb发射器插入电脑模拟CD驱动器，双击运行CD驱动器后等待数秒自动投屏 \n如何进入同屏器设置界面  按遥控器设置键   手机wifi连接同屏器热点,在手机浏览器输入192.168.59.254 \n如何修改同屏器菜单语言  进入设置菜单System-\u0026gt;Language \n同屏器如何连接Wifi路由器  进入设置菜单Network-\u0026gt;WiFi Connection \n如何设置同屏器投屏满屏显示  进入设置菜单Video-\u0026gt;Aspect Ration-\u0026gt;Full to screen \n投屏画面四周被切掉显示不全如何处理  进入设置菜单Video-\u0026gt;Scale Video Output to-\u0026gt;95% \n同屏器接入Wifi路由器后，Usb发射器如何接入同一个Wifi?  点击Usb发射器电脑程序–切换到局域网，找到对应路由器连接   Usb发射器和手机局域网内共享同屏器 \n","date":"2022-01-17T00:00:00Z","image":"http://www.basicgo.net/p/u2-x10_help/1530019998_hu640d74e2dd0f9b769608078c66ff47d9_505613_120x120_fill_q75_box_smart1.jpeg","permalink":"http://www.basicgo.net/p/u2-x10_help/","title":"U2-X10会议投屏产品使用问答"},{"content":"投屏传输的音视频，并对时延有比较苛刻的要求，基本上目前通过局域网络传输的投屏应用，时延超过200ms体验就比较差，较好的画质和时延折中的目标是控制在100ms内。\n协议  UDP: 由RFC768定义的UDP只是做了运输协议能够做的最少工作,除了复用/分解功能和少量的差错检查外,几乎没有对IP增加别动东西. TCP: 面向连接的可靠的数据传输协议.  对比  采用UDP时应用进程将数据传递给UDP,UDP就会将数据打包进UDP报文并立即传送到网络层,TCP有拥塞控制机制，需要目的主机收到报文并加以确认.投屏应用是音视频有实时传输需要，不希望过分延迟报文传送，但能容忍一些数据丢失，TCP并不是特别适合这个要求。 TCP在开始数据传输之前要经过3次握手，UDP却不需要任何准备即可进行数据传输。 TCP需要在端系统中维护连接状态，包括接收和发送缓存、拥塞控制参数以及序号与确认号参数。UDP不维护连接状态，也不跟踪这些参数。 TCP报文都有20字节的首部开销，UDP只需要8字节  UDP   TCP   在将音视频块传递给UDP之前,需要专门为传输音视频设计的实时传输协议(RTP)或类似的方案,在下面章节中讨论RTP。","date":"2022-01-12T00:00:00Z","permalink":"http://www.basicgo.net/p/screengo-5/","title":"设计手机投屏安卓app(5)"},{"content":"MediaCodec， MediaCodec class can be used to access low-level media codecs, i.e. encoder/decoder components. It is part of the Android low-level multimedia support infrastructure (normally used together with MediaExtractor, MediaSync, MediaMuxer, MediaCrypto, MediaDrm, Image, Surface, and AudioTrack.)\n投屏需要录屏并编码，不用保存视频文件到磁盘，MediaCodec非常合适作为我们的数据中转站，通过配置h264 encoder,一方面它从Surface中得到yuv raw数据并编码，一方面我们获取h264的视频编码流向下送到传输层就可以了。\n申请MediaProjection并创建VirtualDisplay MediaProjectionManager x = (MediaProjectionManager)getSystemService(MEDIA_PROJECTION_SERVICE); int mResultCode = intent.getIntExtra(\u0026#34;code\u0026#34;, -1); Intent mResultData = intent.getParcelableExtra(\u0026#34;data\u0026#34;); //mResultData = intent.getSelector();  MediaProjection mediaProjection=x.getMediaProjection(mResultCode, Objects.requireNonNull(mResultData)); public VirtualDisplay createVirtuaDisplay(){ DisplayMetrics metric = new DisplayMetrics(); WindowManager wm = (WindowManager) RenderApplication.getInstance().getSystemService(Context.WINDOW_SERVICE); wm.getDefaultDisplay().getRealMetrics(metric); return mediaProjection.createVirtualDisplay(recorderService.START_RENDER_ENGINE, metric.widthPixels, metric.heightPixels, metric.densityDpi, DisplayManager.VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR, null, null, null); } 创建MediaCodec MediaCodec codec = MediaCodec.createEncoderByType(MediaFormat.MIMETYPE_VIDEO_AVC); 关联VirtualDisplay和MediaCodec Surface surface = codec.createInputSurface(); VirtualDisplay display = createDisplay(); display.setSurface(surface); 从MediaCodec获取视频流送到传输层 MediaCodec.BufferInfo bufferInfo = new MediaCodec.BufferInfo(); int outputBufferId = codec.dequeueOutputBuffer(bufferInfo, -1); if (outputBufferId \u0026gt;= 0) { ByteBuffer codecBuffer = codec.getOutputBuffer(outputBufferId); //发送数据 } ","date":"2022-01-05T00:00:00Z","image":"http://www.basicgo.net/p/screengo-4/mediacodec_hub095b38009b3f7c9e64c97c112511c43_12775_120x120_fill_box_smart1_3.png","permalink":"http://www.basicgo.net/p/screengo-4/","title":"设计手机投屏安卓app(4)"},{"content":"RK3036发布的SDK中，内置有对dlna的支持，使用SDK提供的API接口实现设备查询。\n发送M-SEARCH 并接收response  创建Control Poinit  #include \u0026lt;cybergarage/upnp/ccontrolpoint.h\u0026gt;CgUpnpControlPoint* dmc = mupnp_controlpoint_new();  创建Response 回调  void dmc_ssdpresponse_listener(CgUpnpSSDPPacket* ssdpPacket) { CgHttpHeader *header; /**** print ssdp headers ****/ for (header = cg_http_headerlist_gets(ssdpPacket-\u0026gt;headerList); header != NULL; header = cg_http_header_next(header)) { ALOGD(\u0026#34;%s: %s\\n\u0026#34;, cg_http_header_getname(header), cg_http_header_getvalue(header)); } }  启动  cg_upnp_controlpoint_setssdpresponselistener(dmc, dmc_ssdpresponse_listener); cg_upnp_controlpoint_start(dmc);  发送M-SEARCH消息  cg_upnp_controlpoint_search(dmc,\u0026#34;ssdp:all\u0026#34;);  dmc_ssdpresponse_listener日志,这是我自己调试RK3036开发板时M-SEARCH收到的响应输出:  D/lollipop_mix( 152): LOCATION: http://192.168.2.5:62008/ D/lollipop_mix( 152): DATE: Thu, 30 Dec 2021 09:06:30 GMT D/lollipop_mix( 152): EXT: D/lollipop_mix( 152): SERVER: ANDROID, UPnP/1.0, Intel MicroStack/1.0.2718 D/lollipop_mix( 152): USN: uuid:9A:1A:CE:9E:E3:7B@www.basicgo.net::urn:schemas-upnp-org:service:UsbDisplay:1 D/lollipop_mix( 152): CACHE-CONTROL: max-age=1800 D/lollipop_mix( 152): ST: HUAWEI ALP-AL00:7B ","date":"2021-12-31T00:00:00Z","permalink":"http://www.basicgo.net/p/rk3036-rk_dlna/","title":"RK3036 开发板"},{"content":"UPnP， Universal Plug and Play，通用即插即用。\n协议  SSDP: Simple Service Discovery Protocol, for discovering UPnP devices on the local network. SCPD: Service Control Point Definition, for defining the actions offered by the various services. SOAP: Simple Object Access Protocol, for actually calling actions.  SSDP Discovery UPnP官方文档第10页开始描述Discovery,细节非常清晰，仔细阅读即可，取它一张图概述  Discovery \nDiscovery:Search:Request with M-SEARCH char buffer[1024]; int bufferlength = snprintf(buffer,1024,\u0026#34;M-SEARCH * HTTP/1.1\\r\\nMX: 3\\r\\nST: %s\\r\\nHOST: 239.255.255.250:1900\\r\\nMAN: \\\u0026#34;ssdp:discover\\\u0026#34;\\r\\n\\r\\n\u0026#34;,ST); int sockfd=socket(AF_INET,SOCK_DGRAM,0); struct sockaddr_in addr; addr.sin_family =AF_INET; addr.sin_port =htons(1900); addr.sin_addr.s_addr = inet_addr(\u0026#34;239.255.255.250\u0026#34;); sendto(sockfd,buffer,bufferlength,0,(struct sockaddr*)\u0026amp;addr,sizeof(addr));    ST description     ssdp:all Search for all devices and services.   upnp:rootdevice Search for root devices only.   uuid:device-UUID Search for a particular device. Device UUID specified by UPnP vendor.   urn:schemas-upnp-org:device:deviceType:v Search for any device of this type. Device type and version defined by UPnP Forum working committee.   urn:schemas-upnp-org:service:serviceType:v Search for any service of this type. Service type and version defined by UPnP Forum working committee.   urn:domain-name:device:deviceType:v Search for any device of this type. Domain name, device type and version defined by UPnP vendor. Period characters in the domain name must be replaced with hyphens in accordance with RFC 2141.   urn:domain-name:service:serviceType:v Search for any service of this type. Domain name, service type and version defined by UPnP vendor. Period characters in the domain name must be replaced with hyphens in accordance with RFC 2141.    Discovery:Search:Response 这是我自己调试RK3036开发板时M-SEARCH收到的响应输出:\nD/lollipop_mix( 152): LOCATION: http://192.168.2.5:62008/ D/lollipop_mix( 152): DATE: Thu, 30 Dec 2021 09:06:30 GMT D/lollipop_mix( 152): EXT: D/lollipop_mix( 152): SERVER: ANDROID, UPnP/1.0, Intel MicroStack/1.0.2718 D/lollipop_mix( 152): USN: uuid:9A:1A:CE:9E:E3:7B@www.basicgo.net::urn:schemas-upnp-org:service:UsbDisplay:1 D/lollipop_mix( 152): CACHE-CONTROL: max-age=1800 D/lollipop_mix( 152): ST: HUAWEI ALP-AL00:7B ","date":"2021-12-30T00:00:00Z","permalink":"http://www.basicgo.net/p/screengo-3/","title":"设计手机投屏安卓app(3)"},{"content":"设备自动发现功能包括设备接入网络后，自动申报自己的名称，提供哪些服务等.\nBonjour for macOS and iOS Bonjour, also known as zero-configuration networking, enables automatic discovery of devices and services on a local network using industry standard IP protocols. Bonjour makes it easy to discover, publish, and resolve network services with a sophisticated, easy-to-use programming interface that is accessible from Cocoa, Ruby, Python, and other languages.\nBonjour is not only based on open Internet standards, our implementation is also available as Open Source under the Apache 2.0 license. It is built into most modern printers and many other consumer products.\n苹果AirPlay 设备，比如Apple TV通过Bonjour发布自己的两个服务:\n RAOP    name value description     txtvers 1 TXT record version 1   ch 2 audio channels: stereo   cn 0,1,2,3 audio codecs   et 0,3,5 supported encryption types   md 0,1,2 supported metadata types   pw false does the speaker require a password?   sr 44100 audio sample rate: 44100 Hz   ss 16 audio sample size: 16-bit   tp UDP supported transport: TCP or UDP   vs 130.14 server version 130.14   am AppleTV2,1 device model      java TXTRecord txtRecord = new TXTRecord(); txtRecord.set(\u0026#34;ch\u0026#34;, \u0026#34;2\u0026#34;); txtRecord.set(\u0026#34;cn\u0026#34;, \u0026#34;0,1,2,3\u0026#34;); txtRecord.set(\u0026#34;da\u0026#34;, \u0026#34;true\u0026#34;); txtRecord.set(\u0026#34;et\u0026#34;, \u0026#34;0,3,5\u0026#34;); txtRecord.set(\u0026#34;vv\u0026#34;, \u0026#34;2\u0026#34;); txtRecord.set(\u0026#34;ft\u0026#34;, \u0026#34;0x5A7FFFF7,0x1E\u0026#34;); txtRecord.set(\u0026#34;am\u0026#34;, \u0026#34;AppleTV2,1\u0026#34;); txtRecord.set(\u0026#34;md\u0026#34;, \u0026#34;0,1,2\u0026#34;); txtRecord.set(\u0026#34;rhd\u0026#34;, \u0026#34;5.6.0.0\u0026#34;); txtRecord.set(\u0026#34;pw\u0026#34;, \u0026#34;false\u0026#34;); txtRecord.set(\u0026#34;sr\u0026#34;, \u0026#34;44100\u0026#34;); txtRecord.set(\u0026#34;ss\u0026#34;, \u0026#34;16\u0026#34;); txtRecord.set(\u0026#34;sv\u0026#34;, \u0026#34;false\u0026#34;); txtRecord.set(\u0026#34;tp\u0026#34;, \u0026#34;UDP\u0026#34;); txtRecord.set(\u0026#34;txtvers\u0026#34;, \u0026#34;1\u0026#34;); txtRecord.set(\u0026#34;sf\u0026#34;, \u0026#34;0x4\u0026#34;); txtRecord.set(\u0026#34;vs\u0026#34;, \u0026#34;220.68\u0026#34;); txtRecord.set(\u0026#34;vn\u0026#34;, \u0026#34;65537\u0026#34;); txtRecord.set(\u0026#34;pk\u0026#34;, \u0026#34;b07727d6f6cd6e08b58ede525ec3cdeaa252ad9f683feb212ef8a205246554e7\u0026#34;); mRaopRegister = new Register(txtRecord, mDeviceName, \u0026#34;_raop._tcp\u0026#34;, \u0026#34;local.\u0026#34;, \u0026#34;\u0026#34;, 49152);  AirPlay service    name value description     model AppleTV2,1 device model   deviceid 58:55:CA:1A:E2:88 MAC address of the device   features 0x39f7 bitfield of supported features   pw 1 server is password protected      其中features具体含义如下:\n   bit name description     0 Video\tvideo supported    1 Photo\tphoto supported    2 VideoFairPlay\tvideo protected with FairPlay DRM    3 VideoVolumeControl\tvolume control supported for videos    4 VideoHTTPLiveStreams\thttp live streaming supported    5 Slideshow\tslideshow supported    7 Screen\tmirroring supported    8 ScreenRotate\tscreen rotation supported    9 Audio\taudio supported    11 AudioRedundant\taudio packet redundancy supported    12 FPSAPv2pt5_AES_GCM\tFairPlay secure auth supported    13 PhotoCaching\tphoto preloading supported     java TXTRecord txtRecord = new TXTRecord(); txtRecord.set(\u0026#34;deviceid\u0026#34;, mMacAddress); txtRecord.set(\u0026#34;features\u0026#34;, \u0026#34;0x5A7FFFF7,0x1E\u0026#34;); txtRecord.set(\u0026#34;srcvers\u0026#34;, \u0026#34;220.68\u0026#34;); txtRecord.set(\u0026#34;flags\u0026#34;, \u0026#34;0x4\u0026#34;); txtRecord.set(\u0026#34;vv\u0026#34;, \u0026#34;2\u0026#34;); txtRecord.set(\u0026#34;model\u0026#34;, \u0026#34;AppleTV2,1\u0026#34;); txtRecord.set(\u0026#34;pw\u0026#34;, \u0026#34;false\u0026#34;); txtRecord.set(\u0026#34;rhd\u0026#34;, \u0026#34;5.6.0.0\u0026#34;); txtRecord.set(\u0026#34;pk\u0026#34;, \u0026#34;b07727d6f6cd6e08b58ede525ec3cdeaa252ad9f683feb212ef8a205246554e7\u0026#34;); txtRecord.set(\u0026#34;pi\u0026#34;, \u0026#34;2e388006-13ba-4041-9a67-25dd4a43d536\u0026#34;); this.mAirplayRegister = new Register(txtRecord, this.mDeviceName, \u0026#34;_airplay._tcp\u0026#34;, \u0026#34;local.\u0026#34;, \u0026#34;\u0026#34;, 7000); ","date":"2021-12-29T00:00:00Z","permalink":"http://www.basicgo.net/p/screengo-2/","title":"设计手机投屏安卓app(2)"},{"content":"首先大概罗列下app 需要的几个主要功能模块，接下来会逐步分章节展开介绍.\n 设备自动发现 录屏 音视频网络传输 解码播放 ","date":"2021-12-27T00:00:00Z","permalink":"http://www.basicgo.net/p/screengo/","title":"设计手机投屏安卓app(1)"},{"content":"把手机屏幕投屏到Windows电脑 介绍一个Windows平台小工具，可以把手机屏幕投到Windows电脑，支持安卓手机和苹果手机。\nGitHub\n百度网盘下载,提取码:hm2x\n我的淘宝  使用手淘扫码查看商品   U2-X10 \n","date":"2021-12-26T00:00:00Z","image":"http://www.basicgo.net/p/screengo-win/1530019998_hu6752a26d718f936e863c1bb53548cfd3_835583_120x120_fill_box_smart1_3.png","permalink":"http://www.basicgo.net/p/screengo-win/","title":"手机如何投屏到Windows电脑"},{"content":"把手机屏幕投屏到安卓电视上去 家里的电视基本都是安卓智能电视了，性能逐渐强大，可以自己安装一些android app来满足我们的一些生活娱乐需求，挖掘电视的潜力，其中手机投屏就是一个不错的功能，可以和家人分享照片等温馨内容，或看电影，电视大屏还是比手机屏幕更舒服。\n苹果手机使用屏幕镜像、隔空播放，通信协议Airplay。\n安卓手机电影播放一般通信协议多采用DLNA,屏幕镜像有采用Miracast或安卓app自定义协议。\n下载安卓app 下载安卓电视App并安装到电视、平板或任意你想接收手机屏幕显示的设备,安装安卓手机App,苹果手机自带Airplay功能。\n 苹果手机   安卓手机 \n 安卓电视 \n好听的一首歌  思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n 我的淘宝  使用手淘扫码查看商品   U2-X10 \n","date":"2021-12-23T00:00:00Z","image":"http://www.basicgo.net/p/screengo-tv/1530019998_hu17742844b5d68e31a05f05663f42ceca_222274_120x120_fill_q75_box_smart1.jpg","permalink":"http://www.basicgo.net/p/screengo-tv/","title":"手机如何投屏到安卓电视"},{"content":"Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，Hugo支持使用Markdown来撰写文档。\n1. 标题  代码  # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6  效果  H1 H2 H3 H4 H5 H6 2. 字体  代码  **粗体** *斜体* _斜体_ ***粗斜体*** ~~删除线~~  效果 粗体\n斜体 斜体 粗斜体 删除线  3. 链接 点击这个[超链接][1] [1]:https://gohugo.io/ 效果 点击这个超链接\n4. 段落 Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\n4. 引用块 The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\n Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 5. 表格 Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName | Age --------|------ Bob | 27 Alice | 23 | Italics | Bold | Code | | -------- | -------- | ------ | | *italics* | **bold** | `code` | 效果\n   Name Age     Bob 27   Alice 23       Italics Bold Code     italics bold code    6. 代码块 使用反钩符号 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 使用4个空格 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  使用Hugo高亮标签 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 列表 数字顺序列表  First item Second item Third item  无数字顺序列表  List item Another item And another item  嵌套列表  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2021-12-09T00:00:00Z","image":"http://www.basicgo.net/p/markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://www.basicgo.net/p/markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/","title":"Markdown 语法手册"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"http://www.basicgo.net/p/math-typesetting/","title":"Math Typesetting"}]